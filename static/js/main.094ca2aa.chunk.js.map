{"version":3,"sources":["components/PressedKey.tsx","App.tsx","index.tsx"],"names":["PressedKey","state","pressedKey","handleKeyUp","event","setState","key","document","addEventListener","this","removeEventListener","message","className","React","Component","App","ReactDOM","render","getElementById"],"mappings":"oNAUaA,EAAb,4MACEC,MAAQ,CACNC,WAAY,IAFhB,EAaEC,YAAc,SAACC,GACb,EAAKC,SAAS,CAAEH,WAAYE,EAAME,OAdtC,uDAKE,WACEC,SAASC,iBAAiB,QAASC,KAAKN,eAN5C,kCASE,WACEI,SAASG,oBAAoB,QAASD,KAAKN,eAV/C,oBAiBE,WACE,IAAQD,EAAeO,KAAKR,MAApBC,WAEJS,EAAU,0BAMd,MAJmB,KAAfT,IACFS,EAAO,kCAA8BT,IAIrC,qBAAKU,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACGD,UA7BX,GAAgCE,IAAMC,WCPzBC,EAAgB,kBAC3B,cAAC,EAAD,K,MCCFC,IAASC,OACP,cAAC,EAAD,IACAV,SAASW,eAAe,W","file":"static/js/main.094ca2aa.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n\n};\n\ntype State = {\n  pressedKey: string;\n};\n\nexport class PressedKey extends React.Component<Props, State> {\n  state = {\n    pressedKey: '',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.handleKeyUp);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.handleKeyUp);\n  }\n\n  handleKeyUp = (event: KeyboardEvent) => {\n    this.setState({ pressedKey: event.key });\n  };\n\n  render() {\n    const { pressedKey } = this.state;\n\n    let message = 'Nothing was pressed yet';\n\n    if (pressedKey !== '') {\n      message = `The last pressed key is ${pressedKey}`;\n    }\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {message}\n        </p>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { PressedKey } from './components/PressedKey';\n\nexport const App: React.FC = () => (\n  <PressedKey />\n);\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}